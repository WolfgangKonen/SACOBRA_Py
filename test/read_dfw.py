import numpy as np
import pandas as pd
import matplotlib.pyplot as plt


def read_dfw(idp, n_splits, png_file = None):
    """
    Read the data frame dfw1 generated by test_rbf_width in testRbfsacob.py
    """
    deg1 = 1
    dfw1 = pd.read_feather("feather/dfw1.feather")
    print(dfw1.loc[dfw1['degree'] == deg1, ['width', 'kernel', 'degree', 'seed', 'inter', 'err']])
    print(dfw1.loc[dfw1['degree'] == 2, ['width', 'kernel', 'degree', 'seed', 'inter', 'err']])
    width1 = np.array(dfw1.loc[dfw1['degree'] == deg1, ['width']])
    width2 = np.array(dfw1.loc[dfw1['degree'] == 2, ['width']])
    err1 = np.array(dfw1.loc[dfw1['degree'] == deg1, ['err']])
    err2 = np.array(dfw1.loc[dfw1['degree'] == 2, ['err']])
    kernel = dfw1[0:1]['kernel'][0]

    ax = plt.subplot(111)
    ax.set_xscale("log")
    # ax.set_yscale("log")
    plt.plot(width1, err1, 'b-', label=f'deg={deg1}')
    plt.plot(width2, err2, 'r-', label=f'deg=2')
    plt.title(f'{kernel}, idp={idp}, folds={n_splits}')
    plt.xlabel('width', fontsize=16)
    plt.ylabel('approx err', fontsize=16)
    plt.grid(visible=True, which='major', axis='y')
    # plt.ylim(top=0.5, bottom=0.0)
    plt.legend()
    if png_file is not None:
        plt.savefig(png_file)
        print(f"Plot saved to {png_file}")
    plt.show()
    dummy = 0


if __name__ == '__main__':
    read_dfw()
